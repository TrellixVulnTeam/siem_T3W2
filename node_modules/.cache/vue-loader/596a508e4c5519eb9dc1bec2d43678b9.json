{"remainingRequest":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\views\\task\\TaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\views\\task\\TaskList.vue","mtime":1640422935837},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVG9vbHRpcE1peGluIGZyb20gJ0AvbWl4aW5zL1Rvb2x0aXAnDQppbXBvcnQgVGFza0Zvcm0gZnJvbSAnQC9jb21wb25lbnRzL2Zvcm0vVGFza0Zvcm0nDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBUYXNrRm9ybSwNCiAgfSwNCiAgbWl4aW5zOiBbVG9vbHRpcE1peGluXSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgc2hvd0RpYWxvZzogZmFsc2UsDQogICAgICBzZWFyY2g6ICcnLA0KICAgICAgbG9hZGluZ0l0ZW1zOiBmYWxzZSwNCiAgICAgIHNlbGVjdGVkSXRlbTogbnVsbCwNCiAgICAgIHNlcnZlckl0ZW1zTGVuZ3RoOiAwLA0KICAgICAgaXRlbXNQZXJQYWdlOiAxNSwNCiAgICAgIHNob3dGaWx0ZXI6IHRydWUsDQogICAgICBmaWx0ZXI6IHsNCiAgICAgICAgcGFnZTogMSwNCiAgICAgICAgJ2ZpbHRlcltuYW1lXSc6IG51bGwsDQogICAgICAgICdmaWx0ZXJbcHJvamVjdF9pZF0nOiBudWxsLA0KICAgICAgICAnZmlsdGVyW3N0YXR1c10nOiBudWxsLA0KICAgICAgfSwNCiAgICAgIGhlYWRlcnM6IFsNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdQcm9qZWN0JywNCiAgICAgICAgICB2YWx1ZTogJ3Byb2plY3QubmFtZScsDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICB0ZXh0OiAnVGFzaycsDQogICAgICAgICAgdmFsdWU6ICduYW1lJywNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdEZXNjcmlwdGlvbicsDQogICAgICAgICAgdmFsdWU6ICdkZXNjcmlwdGlvbicsDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICB0ZXh0OiAnc2x1ZycsDQogICAgICAgICAgdmFsdWU6ICdzbHVnJywNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdTdGF0dXMnLA0KICAgICAgICAgIHZhbHVlOiAnc3RhdHVzJywNCiAgICAgICAgICB3aWR0aDogMTAwLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgdGV4dDogJ0FjdGlvbicsDQogICAgICAgICAgdmFsdWU6ICdhY3Rpb24nLA0KICAgICAgICB9LA0KICAgICAgXSwNCiAgICAgIGl0ZW1zOiBbXSwNCiAgICAgIGFjdGlvbnM6IFsNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdFZGl0IEl0ZW0nLA0KICAgICAgICAgIGljb246ICdtZGktcGVuY2lsJywNCiAgICAgICAgICBjbGljazogdGhpcy5oYW5kbGVFZGl0SXRlbSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdEZWxldGUgSXRlbScsDQogICAgICAgICAgaWNvbjogJ21kaS1jbG9zZScsDQogICAgICAgICAgY2xpY2s6IHRoaXMuaGFuZGxlRGVsZXRlSXRlbSwNCiAgICAgICAgfSwNCiAgICAgIF0sDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGdldFRhc2tTdGF0dXMgKCkgew0KICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3Rhc2svZ2V0VGFza1N0YXR1cyddDQogICAgfSwNCiAgICBnZXRQcm9qZWN0TGlzdCAoKSB7DQogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1sndGFzay9nZXRQcm9qZWN0TGlzdCddDQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgICckcm91dGUucXVlcnknOiB7DQogICAgICBoYW5kbGVyKHF1ZXJ5KSB7DQogICAgICAgIGNvbnN0IGZpbHRlciA9IHRoaXMudXBkYXRlRmlsdGVyUXVlcnkocXVlcnkpDQogICAgICAgIHRoaXMuZmV0Y2hSZWNvcmRzKGZpbHRlcikNCiAgICAgIH0sDQogICAgICBpbW1lZGlhdGU6IHRydWUsDQogICAgfSwNCiAgfSwNCg0KICBtZXRob2RzOiB7DQogICAgLy8NCiAgICB1cGRhdGVGaWx0ZXJRdWVyeShxdWVyeSkgew0KICAgICAgY29uc3QgZmlsdGVyID0gT2JqZWN0LmFzc2lnbih0aGlzLmZpbHRlciwgdGhpcy50cmFuc2Zvcm1RdWVyeShxdWVyeSkpDQogICAgICByZXR1cm4gZmlsdGVyDQogICAgfSwNCiAgICB0cmFuc2Zvcm1RdWVyeShxdWVyeSkgew0KICAgICAgY29uc3QgbnVtYmVycyA9IFsnZmlsdGVyW3Byb2plY3RfaWRdJywgJ2ZpbHRlcltzdGF0dXNdJywgJ3BhZ2UnXQ0KICAgICAgZm9yIChsZXQga2V5IGluIHF1ZXJ5KSB7DQogICAgICAgIGlmIChudW1iZXJzLmluY2x1ZGVzKGtleSkpIHsNCiAgICAgICAgICBjb25zdCB2YWwgPSBxdWVyeVtrZXldID8gcGFyc2VJbnQocXVlcnlba2V5XSkgOiBxdWVyeVtrZXldDQogICAgICAgICAgcXVlcnlba2V5XSA9IHZhbA0KICAgICAgICB9DQogICAgICB9DQogICAgICByZXR1cm4gcXVlcnkNCiAgICB9LA0KICAgIHJlc2V0RmlsdGVyKCkgew0KICAgICAgdGhpcy5maWx0ZXIgPSB7DQogICAgICAgIHBhZ2U6IDEsDQogICAgICAgICdmaWx0ZXJbbmFtZV0nOiBudWxsLA0KICAgICAgICAnZmlsdGVyW3Byb2plY3RfaWRdJzogbnVsbCwNCiAgICAgICAgJ2ZpbHRlcltzdGF0dXNdJzogbnVsbCwNCiAgICAgIH0NCiAgICB9LA0KICAgIGZldGNoUmVjb3JkcyhxdWVyeSkgew0KICAgICAgdGhpcy5sb2FkaW5nSXRlbXMgPSB0cnVlDQogICAgICB0aGlzLml0ZW1zID0gW10NCiAgICAgIHJldHVybiB0aGlzLiRzdG9yZQ0KICAgICAgICAuZGlzcGF0Y2goJ3Rhc2svZmV0Y2hUYXNrJywgcXVlcnkpDQogICAgICAgIC50aGVuKCh7IGRhdGEsIG1ldGEgfSkgPT4gew0KICAgICAgICAgIHRoaXMuaXRlbXMgPSBkYXRhDQogICAgICAgICAgdGhpcy5zZXJ2ZXJJdGVtc0xlbmd0aCA9IG1ldGEudG90YWwNCiAgICAgICAgICB0aGlzLmxvYWRpbmdJdGVtcyA9IGZhbHNlDQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoKSA9PiB7DQogICAgICAgICAgdGhpcy5sb2FkaW5nSXRlbXMgPSBmYWxzZQ0KICAgICAgICB9KQ0KICAgIH0sDQogICAgLy9hY3Rpb24NCiAgICBoYW5kbGVDcmVhdGVJdGVtKCkgew0KICAgICAgdGhpcy5zZWxlY3RlZEl0ZW0gPSBudWxsDQogICAgICB0aGlzLnNob3dEaWFsb2cgPSB0cnVlDQogICAgfSwNCiAgICBoYW5kbGVFZGl0SXRlbShpdGVtKSB7DQogICAgICB0aGlzLnNlbGVjdGVkSXRlbSA9IGl0ZW0NCiAgICAgIHRoaXMuc2hvd0RpYWxvZyA9IHRydWUNCiAgICB9LA0KICAgIGhhbmRsZURlbGV0ZUl0ZW0oeyBpZCB9KSB7DQogICAgICBpZiAod2luZG93LmNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB0byBkZWxldGUgdGhpcycpKSB7DQogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd0YXNrL2RlbGV0ZVRhc2snLCBpZCkudGhlbigoKSA9PiB7DQogICAgICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMuZmlsdGVyKChpdGVtKSA9PiBpdGVtLmlkICE9IGlkKQ0KICAgICAgICB9KQ0KICAgICAgfQ0KICAgIH0sDQogICAgaGFuZGxlVXBkYXRlU3RhdHVzKGl0ZW0sIHN0YXR1cykgew0KICAgICAgY29uc3QgcGF5bG9hZCA9IHsNCiAgICAgICAgaWQ6IGl0ZW0uaWQsDQogICAgICAgIGRhdGE6IHsNCiAgICAgICAgICBzdGF0dXM6IHN0YXR1cywNCiAgICAgICAgfSwNCiAgICAgIH0NCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd0YXNrL3VwZGF0ZVRhc2snLCBwYXlsb2FkKQ0KICAgIH0sDQogICAgaGFuZGxlUmVmcmVzaEl0ZW0oKSB7DQogICAgICB0aGlzLmZldGNoUmVjb3Jkcyh0aGlzLmZpbHRlcikNCiAgICB9LA0KICAgIC8vIGZpbHRlcg0KICAgIGhhbmRsZVBhZ2VDaGFuZ2VkKHBhZ2UpIHsNCiAgICAgIHRoaXMuZmlsdGVyLnBhZ2UgPSBwYWdlDQogICAgICB0aGlzLmZpbHRlci50ID0gRGF0ZS5ub3coKQ0KICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2Uoew0KICAgICAgICBwYXRoOiB0aGlzLiRyb3V0ZS5wYXRoLA0KICAgICAgICBxdWVyeTogdGhpcy5maWx0ZXIsDQogICAgICB9KQ0KICAgIH0sDQogICAgaGFuZGxlUmVzZXRGaWx0ZXIoKSB7DQogICAgICB0aGlzLmZpbHRlciA9IHsNCiAgICAgICAgcGFnZTogMSwNCiAgICAgICAgJ2ZpbHRlcltuYW1lXSc6IG51bGwsDQogICAgICAgICdmaWx0ZXJbc3RhdHVzXSc6IG51bGwsDQogICAgICB9DQogICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7DQogICAgICAgIHBhdGg6IHRoaXMuJHJvdXRlLnBhdGgsDQogICAgICB9KQ0KICAgIH0sDQogICAgaGFuZGxlQXBwbHlGaWx0ZXIoKSB7DQogICAgICB0aGlzLmZpbHRlci50ID0gRGF0ZS5ub3coKQ0KICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2Uoew0KICAgICAgICBwYXRoOiB0aGlzLiRyb3V0ZS5wYXRoLA0KICAgICAgICBxdWVyeTogdGhpcy5maWx0ZXIsDQogICAgICB9KQ0KICAgIH0sDQogICAgaGFuZGxlQ2xlYXIoKSB7DQogICAgICB0aGlzLnJlc2V0RmlsdGVyKCkNCiAgICAgIHRoaXMuZmlsdGVyLnQgPSBEYXRlLm5vdygpDQogICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7DQogICAgICAgIHBhdGg6IHRoaXMuJHJvdXRlLnBhdGgsDQogICAgICAgIHF1ZXJ5OiB0aGlzLmZpbHRlciwNCiAgICAgIH0pDQogICAgfSwNCiAgICBoYW5kbGVGb3JtU3VjY2VzcygpIHsNCiAgICAgIHRoaXMuc2hvd0RpYWxvZyA9IGZhbHNlDQogICAgICB0aGlzLmZldGNoUmVjb3JkcygpDQogICAgfSwNCiAgfSwNCn0NCg=="},{"version":3,"sources":["TaskList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"TaskList.vue","sourceRoot":"src/views/task","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-subheader class=\"pl-0\">A simple demo for showing how to build datatable with REST API </v-subheader>\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <v-card tile>\r\n          <v-toolbar flat>\r\n            <v-text-field\r\n              v-model=\"filter['filter[name]']\"\r\n              text\r\n              solo\r\n              flat\r\n              :prepend-icon=\"showFilter ? 'mdi-filter-variant-plus' : 'mdi-filter-variant'\"\r\n              append-icon=\"mdi-magnify\"\r\n              placeholder=\"Type something\"\r\n              hide-details\r\n              clearable\r\n              @keyup.enter=\"handleApplyFilter\"\r\n              @click:append=\"handleApplyFilter\"\r\n              @click:prepend=\"showFilter = !showFilter\"\r\n              @click:clear=\"handleClear\"\r\n            />\r\n            <v-btn icon @click=\"handleRefreshItem\">\r\n              <v-icon>mdi-refresh</v-icon>\r\n            </v-btn>\r\n            <v-btn icon @click=\"handleCreateItem\">\r\n              <v-icon>mdi-plus</v-icon>\r\n            </v-btn>\r\n          </v-toolbar>\r\n          <v-divider />\r\n          <v-card v-show=\"showFilter\" flat class=\"grey lighten-4\">\r\n            <v-card-text>\r\n              <v-row>\r\n                <v-col :cols=\"4\">\r\n                  <v-autocomplete v-model=\"filter['filter[project_id]']\" :items=\"getProjectList\" label=\"Project\" />\r\n                </v-col>\r\n                <v-col :cols=\"4\">\r\n                  <v-autocomplete v-model=\"filter['filter[status]']\" :items=\"getTaskStatus\" label=\"Status\" />\r\n                </v-col>\r\n              </v-row>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-btn text @click=\"handleResetFilter\">Reset</v-btn>\r\n              <v-btn tile color=\"primary\" @click=\"handleApplyFilter\">Apply</v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n          <v-card-text class=\"pa-0\">\r\n            <v-data-table\r\n              :loading=\"loadingItems\"\r\n              :headers=\"headers\"\r\n              :items=\"items\"\r\n              :items-per-page-options=\"[15, 30, 50]\"\r\n              :server-items-length=\"serverItemsLength\"\r\n              :items-per-page=\"itemsPerPage\"\r\n              :page.sync=\"filter['page']\"\r\n              item-key=\"id\"\r\n              show-select\r\n              @update:page=\"handlePageChanged\"\r\n            >\r\n              <template #[`item.status`]=\"{ item }\">\r\n                <v-autocomplete\r\n                  v-model=\"item.status\"\r\n                  :items=\"getTaskStatus\"\r\n                  @change=\"handleUpdateStatus(item, item.status)\"\r\n                />\r\n              </template>\r\n              <template #[`item.action`]=\"{ item }\">\r\n                <v-menu>\r\n                  <template #activator=\"{ on: menu }\">\r\n                    <v-tooltip bottom>\r\n                      <template #activator=\"{ on: tooltip }\">\r\n                        <v-btn icon v-on=\"onTooltip({ ...tooltip, ...menu })\">\r\n                          <v-icon>mdi-dots-vertical</v-icon>\r\n                        </v-btn>\r\n                      </template>\r\n                      <span>Action</span>\r\n                    </v-tooltip>\r\n                  </template>\r\n                  <v-list class=\"pa-0\" dense>\r\n                    <v-list-item v-for=\"action in actions\" :key=\"action.text\" @click=\"action.click(item)\">\r\n                      <v-list-item-icon class=\"mr-2\">\r\n                        <v-icon small>{{ action.icon }}</v-icon>\r\n                      </v-list-item-icon>\r\n                      <v-list-item-title>{{ action.text }}</v-list-item-title>\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-menu>\r\n              </template>\r\n            </v-data-table>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n    <v-dialog v-model=\"showDialog\" scrollable width=\"840\">\r\n      <task-form :item=\"selectedItem\" @form:success=\"handleFormSuccess\" />\r\n    </v-dialog>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport TooltipMixin from '@/mixins/Tooltip'\r\nimport TaskForm from '@/components/form/TaskForm'\r\nexport default {\r\n  components: {\r\n    TaskForm,\r\n  },\r\n  mixins: [TooltipMixin],\r\n  data() {\r\n    return {\r\n      showDialog: false,\r\n      search: '',\r\n      loadingItems: false,\r\n      selectedItem: null,\r\n      serverItemsLength: 0,\r\n      itemsPerPage: 15,\r\n      showFilter: true,\r\n      filter: {\r\n        page: 1,\r\n        'filter[name]': null,\r\n        'filter[project_id]': null,\r\n        'filter[status]': null,\r\n      },\r\n      headers: [\r\n        {\r\n          text: 'Project',\r\n          value: 'project.name',\r\n        },\r\n        {\r\n          text: 'Task',\r\n          value: 'name',\r\n        },\r\n        {\r\n          text: 'Description',\r\n          value: 'description',\r\n        },\r\n        {\r\n          text: 'slug',\r\n          value: 'slug',\r\n        },\r\n        {\r\n          text: 'Status',\r\n          value: 'status',\r\n          width: 100,\r\n        },\r\n        {\r\n          text: 'Action',\r\n          value: 'action',\r\n        },\r\n      ],\r\n      items: [],\r\n      actions: [\r\n        {\r\n          text: 'Edit Item',\r\n          icon: 'mdi-pencil',\r\n          click: this.handleEditItem,\r\n        },\r\n        {\r\n          text: 'Delete Item',\r\n          icon: 'mdi-close',\r\n          click: this.handleDeleteItem,\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  computed: {\r\n    getTaskStatus () {\r\n      return this.$store.getters['task/getTaskStatus']\r\n    },\r\n    getProjectList () {\r\n      return this.$store.getters['task/getProjectList']\r\n    }\r\n  },\r\n  watch: {\r\n    '$route.query': {\r\n      handler(query) {\r\n        const filter = this.updateFilterQuery(query)\r\n        this.fetchRecords(filter)\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    //\r\n    updateFilterQuery(query) {\r\n      const filter = Object.assign(this.filter, this.transformQuery(query))\r\n      return filter\r\n    },\r\n    transformQuery(query) {\r\n      const numbers = ['filter[project_id]', 'filter[status]', 'page']\r\n      for (let key in query) {\r\n        if (numbers.includes(key)) {\r\n          const val = query[key] ? parseInt(query[key]) : query[key]\r\n          query[key] = val\r\n        }\r\n      }\r\n      return query\r\n    },\r\n    resetFilter() {\r\n      this.filter = {\r\n        page: 1,\r\n        'filter[name]': null,\r\n        'filter[project_id]': null,\r\n        'filter[status]': null,\r\n      }\r\n    },\r\n    fetchRecords(query) {\r\n      this.loadingItems = true\r\n      this.items = []\r\n      return this.$store\r\n        .dispatch('task/fetchTask', query)\r\n        .then(({ data, meta }) => {\r\n          this.items = data\r\n          this.serverItemsLength = meta.total\r\n          this.loadingItems = false\r\n        })\r\n        .catch(() => {\r\n          this.loadingItems = false\r\n        })\r\n    },\r\n    //action\r\n    handleCreateItem() {\r\n      this.selectedItem = null\r\n      this.showDialog = true\r\n    },\r\n    handleEditItem(item) {\r\n      this.selectedItem = item\r\n      this.showDialog = true\r\n    },\r\n    handleDeleteItem({ id }) {\r\n      if (window.confirm('Are you sure to delete this')) {\r\n        this.$store.dispatch('task/deleteTask', id).then(() => {\r\n          this.items = this.items.filter((item) => item.id != id)\r\n        })\r\n      }\r\n    },\r\n    handleUpdateStatus(item, status) {\r\n      const payload = {\r\n        id: item.id,\r\n        data: {\r\n          status: status,\r\n        },\r\n      }\r\n      this.$store.dispatch('task/updateTask', payload)\r\n    },\r\n    handleRefreshItem() {\r\n      this.fetchRecords(this.filter)\r\n    },\r\n    // filter\r\n    handlePageChanged(page) {\r\n      this.filter.page = page\r\n      this.filter.t = Date.now()\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n        query: this.filter,\r\n      })\r\n    },\r\n    handleResetFilter() {\r\n      this.filter = {\r\n        page: 1,\r\n        'filter[name]': null,\r\n        'filter[status]': null,\r\n      }\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n      })\r\n    },\r\n    handleApplyFilter() {\r\n      this.filter.t = Date.now()\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n        query: this.filter,\r\n      })\r\n    },\r\n    handleClear() {\r\n      this.resetFilter()\r\n      this.filter.t = Date.now()\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n        query: this.filter,\r\n      })\r\n    },\r\n    handleFormSuccess() {\r\n      this.showDialog = false\r\n      this.fetchRecords()\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}