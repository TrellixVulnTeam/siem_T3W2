{"remainingRequest":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\components\\chat\\ChatWindow.vue?vue&type=style&index=0&id=c00ab182&lang=sass&scoped=true&","dependencies":[{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\components\\chat\\ChatWindow.vue","mtime":1640353310866},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNoYXRfd2luZG93DQogICZfX3Njcm9sbGJhcg0KICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDY0cHggLSA2NHB4IC0gNTZweCkgIWltcG9ydGFudA0K"},{"version":3,"sources":["ChatWindow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA","file":"ChatWindow.vue","sourceRoot":"src/components/chat","sourcesContent":["<template>\r\n  <div class=\"chat_window\">\r\n    <v-toolbar text class=\"chat_window__toolbar\" light>\r\n      <v-btn icon>\r\n        <v-icon color=\"text--secondary\">mdi-arrow-left</v-icon>\r\n      </v-btn>\r\n      <v-spacer />\r\n      <v-toolbar-title>\r\n        <v-subheader>The server will not store the message</v-subheader>\r\n      </v-toolbar-title>\r\n      <v-spacer />\r\n      <v-tooltip bottom>\r\n        <template #activator=\"{ on }\">\r\n          <v-btn slot=\"activator\" icon v-on=\"on\">\r\n            <v-icon color=\"text--secondary\">mdi-plus</v-icon>\r\n          </v-btn>\r\n        </template>\r\n        <span>Add user</span>\r\n      </v-tooltip>\r\n    </v-toolbar>\r\n    <v-card>\r\n      <vue-perfect-scrollbar ref=\"scrollbar\" class=\"chat_window__scrollbar grey lighten-5\" :style=\"computeHeight\">\r\n        <v-card-text class=\"messaging_list pa-3\">\r\n          <template v-for=\"(item, index) in getMessages\">\r\n            <chat-messaging-item\r\n              :key=\"index\"\r\n              :username=\"item.username\"\r\n              :text=\"item.text\"\r\n              :created-at=\"item.createdAt\"\r\n            />\r\n          </template>\r\n        </v-card-text>\r\n        <div id=\"#messageBottom\"></div>\r\n      </vue-perfect-scrollbar>\r\n    </v-card>\r\n    <div class=\"chat_window__input\">\r\n      <v-text-field\r\n        v-model=\"message\"\r\n        full-width\r\n        text\r\n        clearable\r\n        solo\r\n        hide-details\r\n        autofocus\r\n        aria-autocomplete=\"off\"\r\n        append-icon=\"mdi-send\"\r\n        label=\"Type some message here\"\r\n        class=\"rounded-0\"\r\n        @click:append=\"handleSendMessage\"\r\n        @keydown.enter=\"handleSendMessage\"\r\n      >\r\n        <div slot=\"prepend-inner\">\r\n          <v-icon>mdi-image-outline</v-icon>\r\n          <v-icon>mdi-face</v-icon>\r\n        </div>\r\n      </v-text-field>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport ChatMessagingItem from './ChatMessagingItem'\r\nexport default {\r\n  components: {\r\n    VuePerfectScrollbar,\r\n    ChatMessagingItem,\r\n  },\r\n  props: {\r\n    height: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      message: null,\r\n    }\r\n  },\r\n  computed: {\r\n    getMessages () {\r\n      return this.$store.getters['chat/getMessages']\r\n    },\r\n    computeHeight() {\r\n      return {\r\n        height: this.height || '',\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    'getMessages.length': {\r\n      handler() {\r\n        this.$nextTick(() => {\r\n          const scrollbar = this.$refs.scrollbar.$el\r\n          scrollbar.scrollTop = scrollbar.scrollHeight\r\n        })\r\n\r\n        // goTo()\r\n      },\r\n    },\r\n  },\r\n  created() {},\r\n  methods: {\r\n    handleSendMessage() {\r\n      if (this.message) {\r\n        this.$store.dispatch('chat/sendMessage', this.message)\r\n        this.message = null\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"sass\" scoped>\r\n.chat_window\r\n  &__scrollbar\r\n    height: calc(100vh - 64px - 64px - 56px) !important\r\n</style>\r\n"]}]}