{"remainingRequest":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\components\\ThemeSettings.vue?vue&type=style&index=0&id=9a4949e8&lang=sass&scoped=true&","dependencies":[{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\components\\ThemeSettings.vue","mtime":1640353310865},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29sb3Itb3B0aW9uDQogICZfX2l0ZW0NCiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleA0KICAgIG1hcmdpbjogM3B4DQogICAgY3Vyc29yOiBwb2ludGVyDQogICAgJi5hY3RpdmUNCg=="},{"version":3,"sources":["ThemeSettings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA","file":"ThemeSettings.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"themeSetting\">\r\n    <v-toolbar color=\"primary\">\r\n      <v-toolbar-title class=\"white--text\">Theme Settings</v-toolbar-title>\r\n    </v-toolbar>\r\n    <v-container>\r\n      <v-row column>\r\n        <v-col>\r\n          <v-subheader class=\"px-1 my-2\">Color Option</v-subheader>\r\n          <div class=\"color-option\">\r\n            <v-item-group v-model=\"theme\">\r\n              <template v-for=\"item in themeColorOptions\">\r\n                <v-item :key=\"item.key\" v-slot=\"{ active }\" :value=\"item.key\">\r\n                  <v-avatar\r\n                    :class=\"active ? 'active' : ''\"\r\n                    class=\"color-option__item\"\r\n                    :color=\"item.key\"\r\n                    size=\"56\"\r\n                    tile\r\n                    @click=\"handleChangeColor(item)\"\r\n                  >\r\n                    <v-scroll-y-transition>\r\n                      <v-icon v-if=\"active\" color=\"white\"> mdi-check </v-icon>\r\n                    </v-scroll-y-transition>\r\n                  </v-avatar>\r\n                </v-item>\r\n              </template>\r\n            </v-item-group>\r\n          </div>\r\n          <div class=\"theme-options\">\r\n            <v-subheader class=\"px-1 my-2\">Sidebar Option</v-subheader>\r\n            <v-divider></v-divider>\r\n            <div class=\"my-3\">\r\n              <v-btn-toggle v-model=\"sideBarOption\">\r\n                <v-btn text value=\"dark\">Dark</v-btn>\r\n                <v-btn text value=\"light\">Light</v-btn>\r\n              </v-btn-toggle>\r\n            </div>\r\n          </div>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n<script>\r\nimport colors from 'vuetify/es5/util/colors'\r\nexport default {\r\n  data() {\r\n    return {\r\n      locale: this._i18n.locale,\r\n      sideBarOption: 'light',\r\n      colors: colors,\r\n    }\r\n  },\r\n  computed: {\r\n    getTheme () {\r\n      return this.$store.getters['app/getTheme']\r\n    },\r\n    themeColorOptions() {\r\n      return [\r\n        {\r\n          key: 'blue',\r\n        },\r\n        {\r\n          key: 'teal',\r\n        },\r\n        {\r\n          key: 'red',\r\n        },\r\n        {\r\n          key: 'orange',\r\n        },\r\n        {\r\n          key: 'purple',\r\n        },\r\n        {\r\n          key: 'indigo',\r\n        },\r\n        {\r\n          key: 'cyan',\r\n        },\r\n        {\r\n          key: 'pink',\r\n        },\r\n        {\r\n          key: 'green',\r\n        },\r\n      ]\r\n    },\r\n    theme: {\r\n      get() {\r\n        return this.getTheme\r\n      },\r\n      set(val) {\r\n        this.$store.commit('app/setTheme', val, {root: true})\r\n      },\r\n    },\r\n  },\r\n  watch: {\r\n    sideBarOption: {\r\n      handler(val) {\r\n        this.$vuetify.theme.dark = val === 'dark'\r\n      },\r\n      immediate: true,\r\n    },\r\n    updateTheme() {},\r\n  },\r\n  methods: {\r\n    handleChangeColor(option) {\r\n      this.theme = option.key\r\n      const color = this.colors[option.key].base\r\n      this.$store.commit('setThemeColor', color)\r\n      this.$vuetify.theme.themes.light.primary = color\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"sass\" scoped>\r\n.color-option\r\n  &__item\r\n    display: inline-flex\r\n    margin: 3px\r\n    cursor: pointer\r\n    &.active\r\n</style>\r\n"]}]}