{"remainingRequest":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\views\\media\\MediaView.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\views\\media\\MediaView.vue","mtime":1640353310877},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgVG9vbHRpcE1peGluIGZyb20gJ0AvbWl4aW5zL1Rvb2x0aXAnDQppbXBvcnQgeyBodW1hblJlYWRhYmxlRmlsZVNpemUgfSBmcm9tICd2dWV0aWZ5L2xpYi91dGlsL2hlbHBlcnMnDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdNZWRpYVZpZXcnLA0KICBjb21wb25lbnRzOiB7fSwNCiAgbWl4aW5zOiBbVG9vbHRpcE1peGluXSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgc2hvd1JpZ2h0OiBmYWxzZSwNCiAgICAgIHZpZXdNb2RlOiAnbGlzdCcsDQogICAgICBzZWxlY3RlZEl0ZW06IG51bGwsDQogICAgICBpY29uczogew0KICAgICAgICB0eHQ6ICdtZGktZm9ybWF0LXRleHQnLA0KICAgICAgICBqc29uOiAnbWRpLWNvZGUtanNvbicsDQogICAgICAgIGh0bWw6ICdtZGktbGFuZ3VhZ2UtaHRtbDUnLA0KICAgICAgICBwbmc6ICdtZGktaW1hZ2UnLA0KICAgICAgICBzdmc6ICdtZGktc3ZnJywNCiAgICAgIH0sDQogICAgICBsb2FkaW5nOiBmYWxzZSwNCiAgICAgIGl0ZW1zOiBbXSwNCiAgICAgIGFjdGlvbnM6IFsNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdTaGFyZScsDQogICAgICAgICAgaWNvbjogJ21kaS1oZWFydCcsDQogICAgICAgICAgY2xpY2s6IHRoaXMuJGVtaXQoJ2ZpbGU6c2hhcmUnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdEb3dubG9hZCcsDQogICAgICAgICAgaWNvbjogJ21kaS1kb3dubG9hZCcsDQogICAgICAgICAgY2xpY2s6IHRoaXMuJGVtaXQoJ2ZpbGU6ZG93bmxvYWQnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIHRleHQ6ICdEZWxldGUnLA0KICAgICAgICAgIGljb246ICdtZGktZGVsZXRlJywNCiAgICAgICAgICBjbGljazogdGhpcy4kZW1pdCgnZmlsZTpkZWxldGUnKSwNCiAgICAgICAgfSwNCiAgICAgIF0sDQogICAgfQ0KICB9LA0KDQogIGNvbXB1dGVkOiB7DQogICAgZ2V0SWNvbkJ5RXh0ICgpIHsNCiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydmaWxlL2dldEljb25CeUV4dCddDQogICAgfSwNCiAgICBicmVhZGNydW1icygpIHsNCiAgICAgIGNvbnN0IHJvb3QgPSBbDQogICAgICAgIHsNCiAgICAgICAgICB0ZXh0OiAnUm9vdCcsDQogICAgICAgICAgdG86IGAvbWVkaWEvZmlsZWAsDQogICAgICAgICAgZXhhY3Q6IHRydWUsDQogICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLA0KICAgICAgICB9LA0KICAgICAgXQ0KICAgICAgY29uc3QgeyBwYXRoIH0gPSB0aGlzLiRyb3V0ZS5xdWVyeQ0KICAgICAgY29uc3QgcGF0aHMgPSBwYXRoID8gcGF0aC5zcGxpdCgnLycpIDogW10NCiAgICAgIGNvbnN0IHRtcCA9ICFwYXRoDQogICAgICAgID8gW10NCiAgICAgICAgOiBwYXRocy5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7DQogICAgICAgICAgICBjb25zdCBwYXRoID0gcGF0aHMuc2xpY2UoMCwgaW5kZXggKyAxKS5qb2luKCcvJykNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgIHRleHQ6IGl0ZW0sDQogICAgICAgICAgICAgIHRvOiBgL21lZGlhL2ZpbGU/cGF0aD0ke3BhdGh9YCwNCiAgICAgICAgICAgICAgZXhhY3Q6IHRydWUsDQogICAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSwNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgcmV0dXJuIHJvb3QuY29uY2F0KHRtcCkNCiAgICB9LA0KICB9LA0KICB3YXRjaDogew0KICAgICckcm91dGUucXVlcnknOiB7DQogICAgICBoYW5kbGVyKHF1ZXJ5KSB7DQogICAgICAgIHRoaXMuZmV0Y2hSZWNvcmQocXVlcnkpDQogICAgICB9LA0KICAgICAgaW1tZWRpYXRlOiB0cnVlLA0KICAgIH0sDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBmZXRjaFJlY29yZChxdWVyeSkgew0KICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZQ0KICAgICAgdGhpcy5pdGVtcyA9IFtdDQogICAgICB0aGlzLiRzdG9yZQ0KICAgICAgICAuZGlzcGF0Y2goJ2ZpbGUvZmV0Y2hEaXInLCBxdWVyeSkNCiAgICAgICAgLnRoZW4oKHsgZGF0YSB9KSA9PiB7DQogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICAgICAgICB0aGlzLml0ZW1zID0gZGF0YQ0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKCkgPT4gew0KICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlDQogICAgICAgIH0pDQogICAgfSwNCiAgICBjb21wdXRlUGF0aChpdGVtKSB7DQogICAgICByZXR1cm4gaXRlbS50eXBlID09PSAnZGlyJw0KICAgICAgICA/IHsNCiAgICAgICAgICAgIHBhdGg6ICcvbWVkaWEnLA0KICAgICAgICAgICAgcXVlcnk6IHsNCiAgICAgICAgICAgICAgcGF0aDogaXRlbS5wYXRoLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICB9DQogICAgICAgIDogZmFsc2UNCiAgICB9LA0KICAgIGNvbXB1dGVJY29uKGl0ZW0pIHsNCiAgICAgIHJldHVybiBpdGVtLnR5cGUgPT09ICdkaXInID8gJyNpY29uLXdlbmppYW5qaWEnIDogdGhpcy5nZXRJY29uQnlFeHQoaXRlbS5leHRlbnNpb24pDQogICAgfSwNCiAgICBjb21wdXRlU2l6ZShzaXplKSB7DQogICAgICByZXR1cm4gc2l6ZSA/IGh1bWFuUmVhZGFibGVGaWxlU2l6ZShzaXplKSA6ICcnDQogICAgfSwNCiAgICBoYW5kbGVSZWZyZXNoKCkgew0KICAgICAgdGhpcy5mZXRjaFJlY29yZCh0aGlzLiRyb3V0ZS5xdWVyeSkNCiAgICB9LA0KICAgIGhhbmRsZVNlbGVjdEl0ZW0oaXRlbSkgew0KICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gJ2RpcicpIHsNCiAgICAgICAgdGhpcy5zZWxlY3RlZEl0ZW0gPSBudWxsDQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMuY29tcHV0ZVBhdGgoaXRlbSkpDQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnNlbGVjdGVkSXRlbSA9IGl0ZW0NCiAgICAgICAgdGhpcy5zaG93UmlnaHQgPSB0cnVlDQogICAgICAgIC8vIHZpZXcgZmlsZQ0KICAgICAgfQ0KICAgIH0sDQogIH0sDQp9DQo="},{"version":3,"sources":["MediaView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"MediaView.vue","sourceRoot":"src/views/media","sourcesContent":["<template>\r\n  <div class=\"media_manager\">\r\n    <v-toolbar class=\"media_manager_toolbar\" tag=\"div\">\r\n      <v-breadcrumbs :items=\"breadcrumbs\" class=\"mr-4\" />\r\n      <v-text-field\r\n        flat\r\n        hide-details\r\n        solo\r\n        width=\"250\"\r\n        prepend-icon=\"mdi-magnify\"\r\n        label=\"search files, folders\"\r\n        placeholder=\"search\"\r\n      />\r\n      <v-btn icon value=\"refresh\" @click=\"handleRefresh\">\r\n        <v-icon>mdi-refresh</v-icon>\r\n      </v-btn>\r\n      <v-btn icon value=\"upload\">\r\n        <v-icon>mdi-upload</v-icon>\r\n      </v-btn>\r\n      <v-btn-toggle v-model=\"viewMode\" tile dense mandatory>\r\n        <v-btn icon value=\"grid\">\r\n          <v-icon>mdi-view-grid</v-icon>\r\n        </v-btn>\r\n        <v-btn icon value=\"list\">\r\n          <v-icon>mdi-view-list</v-icon>\r\n        </v-btn>\r\n      </v-btn-toggle>\r\n    </v-toolbar>\r\n    <template v-if=\"loading\">\r\n      <v-progress-linear value=\"15\" indeterminate />\r\n    </template>\r\n    <template v-else>\r\n      <v-container>\r\n        <v-row>\r\n          <template v-if=\"viewMode === 'list'\">\r\n            <v-col :cols=\"12\">\r\n              <v-list class=\"media_manager__list\">\r\n                <v-list-item-group v-model=\"selectedItem\" color=\"primary\">\r\n                  <template v-for=\"(item, i) in items\">\r\n                    <v-list-item :key=\"i\" :value=\"item\" two-line exact @click=\"handleSelectItem(item)\">\r\n                      <v-list-item-avatar>\r\n                        <svg class=\"icon\" aria-hidden=\"true\">\r\n                          <use :xlink:href=\"computeIcon(item)\"></use>\r\n                        </svg>\r\n                      </v-list-item-avatar>\r\n                      <v-list-item-content>\r\n                        <v-list-item-title v-text=\"item.basename\" />\r\n                        <v-list-item-subtitle>\r\n                          {{ item.type == 'file' ? computeSize(item.size) : '' }}\r\n                        </v-list-item-subtitle>\r\n                      </v-list-item-content>\r\n                      <v-list-item-action>\r\n                        <v-menu>\r\n                          <template #activator=\"{ on: menu }\">\r\n                            <v-tooltip bottom>\r\n                              <template #activator=\"{ on: tooltip }\">\r\n                                <v-btn icon v-on=\"onTooltip({ ...tooltip, ...menu })\">\r\n                                  <v-icon>mdi-dots-vertical</v-icon>\r\n                                </v-btn>\r\n                              </template>\r\n                              <span>Action</span>\r\n                            </v-tooltip>\r\n                          </template>\r\n                          <v-list class=\"pa-0\" dense>\r\n                            <v-list-item v-for=\"action in actions\" :key=\"action.text\" @click.stop=\"action.click(item)\">\r\n                              <v-list-item-icon class=\"mr-2\">\r\n                                <v-icon small>{{ action.icon }}</v-icon>\r\n                              </v-list-item-icon>\r\n                              <v-list-item-title>{{ action.text }}</v-list-item-title>\r\n                            </v-list-item>\r\n                          </v-list>\r\n                        </v-menu>\r\n                      </v-list-item-action>\r\n                    </v-list-item>\r\n                    <v-divider :key=\"'d' + i\" />\r\n                  </template>\r\n                </v-list-item-group>\r\n              </v-list>\r\n            </v-col>\r\n          </template>\r\n          <template v-else>\r\n            <template v-for=\"item in items\">\r\n              <v-col :key=\"item.basename\" :cols=\"3\">\r\n                <v-card tile @click=\"handleSelectItem(item)\">\r\n                  <template v-if=\"item.type === 'file' && item.extension === 'png'\">\r\n                    <v-img :src=\"item.url\" height=\"200px\"> </v-img>\r\n                  </template>\r\n                  <template v-else>\r\n                    <v-img height=\"200px\">\r\n                      <svg class=\"icon icon-64 center-align\" aria-hidden=\"true\">\r\n                        <use :xlink:href=\"computeIcon(item)\"></use>\r\n                      </svg>\r\n                    </v-img>\r\n                  </template>\r\n                  <v-divider></v-divider>\r\n                  <v-card-actions class=\"pa-0\">\r\n                    <v-list tile two-line class=\"flex pa-0\">\r\n                      <v-list-item class=\"\">\r\n                        <v-list-item-content>\r\n                          <v-list-item-title v-text=\"item.basename\" />\r\n                          <v-list-item-subtitle>\r\n                            {{ item.type == 'file' ? computeSize(item.size) : '' }}\r\n                          </v-list-item-subtitle>\r\n                        </v-list-item-content>\r\n                        <v-list-item-action>\r\n                          <v-menu>\r\n                            <template #activator=\"{ on: menu }\">\r\n                              <v-tooltip bottom>\r\n                                <template #activator=\"{ on: tooltip }\">\r\n                                  <v-btn icon v-on=\"onTooltip({ ...tooltip, ...menu })\">\r\n                                    <v-icon>mdi-dots-vertical</v-icon>\r\n                                  </v-btn>\r\n                                </template>\r\n                                <span>Action</span>\r\n                              </v-tooltip>\r\n                            </template>\r\n                            <v-list class=\"pa-0\" dense>\r\n                              <v-list-item\r\n                                v-for=\"action in actions\"\r\n                                :key=\"action.text\"\r\n                                @click.stop=\"action.click(item)\"\r\n                              >\r\n                                <v-list-item-icon class=\"mr-2\">\r\n                                  <v-icon small>{{ action.icon }}</v-icon>\r\n                                </v-list-item-icon>\r\n                                <v-list-item-title>{{ action.text }}</v-list-item-title>\r\n                              </v-list-item>\r\n                            </v-list>\r\n                          </v-menu>\r\n                        </v-list-item-action>\r\n                      </v-list-item>\r\n                    </v-list>\r\n                  </v-card-actions>\r\n                </v-card>\r\n              </v-col>\r\n            </template>\r\n          </template>\r\n        </v-row>\r\n      </v-container>\r\n    </template>\r\n    <v-navigation-drawer v-model=\"showRight\" app right hide-overlay clipped clipped-right>\r\n      <div v-if=\"selectedItem\">\r\n        <v-toolbar flat class=\"border-bottom\">\r\n          <v-subheader>{{ selectedItem.path }}</v-subheader>\r\n          <v-spacer />\r\n          <v-btn icon @click=\"showRight = false\"><v-icon>mdi-close</v-icon></v-btn>\r\n        </v-toolbar>\r\n        <div>\r\n          <v-card flat>\r\n            <template v-if=\"selectedItem.type === 'file' && selectedItem.extension === 'png'\">\r\n              <v-img :src=\"item.url\" height=\"200px\"> </v-img>\r\n            </template>\r\n            <template v-else>\r\n              <v-img height=\"200px\">\r\n                <svg class=\"icon icon-64 center-align\" aria-hidden=\"true\">\r\n                  <use :xlink:href=\"computeIcon(selectedItem)\"></use>\r\n                </svg>\r\n              </v-img>\r\n            </template>\r\n          </v-card>\r\n          <v-divider />\r\n          <v-list>\r\n            <v-list-item>\r\n              <v-list-item-subtitle v-text=\"selectedItem.basename\" />\r\n            </v-list-item>\r\n            <v-list-item>\r\n              <v-list-item-subtitle v-text=\"selectedItem.dirname || '/'\" />\r\n            </v-list-item>\r\n            <v-list-item>\r\n              <v-list-item-subtitle v-text=\"computeSize(selectedItem.size)\" />\r\n            </v-list-item>\r\n          </v-list>\r\n        </div>\r\n      </div>\r\n    </v-navigation-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TooltipMixin from '@/mixins/Tooltip'\r\nimport { humanReadableFileSize } from 'vuetify/lib/util/helpers'\r\nexport default {\r\n  name: 'MediaView',\r\n  components: {},\r\n  mixins: [TooltipMixin],\r\n  data() {\r\n    return {\r\n      showRight: false,\r\n      viewMode: 'list',\r\n      selectedItem: null,\r\n      icons: {\r\n        txt: 'mdi-format-text',\r\n        json: 'mdi-code-json',\r\n        html: 'mdi-language-html5',\r\n        png: 'mdi-image',\r\n        svg: 'mdi-svg',\r\n      },\r\n      loading: false,\r\n      items: [],\r\n      actions: [\r\n        {\r\n          text: 'Share',\r\n          icon: 'mdi-heart',\r\n          click: this.$emit('file:share'),\r\n        },\r\n        {\r\n          text: 'Download',\r\n          icon: 'mdi-download',\r\n          click: this.$emit('file:download'),\r\n        },\r\n        {\r\n          text: 'Delete',\r\n          icon: 'mdi-delete',\r\n          click: this.$emit('file:delete'),\r\n        },\r\n      ],\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    getIconByExt () {\r\n      return this.$store.getters['file/getIconByExt']\r\n    },\r\n    breadcrumbs() {\r\n      const root = [\r\n        {\r\n          text: 'Root',\r\n          to: `/media/file`,\r\n          exact: true,\r\n          disabled: false,\r\n        },\r\n      ]\r\n      const { path } = this.$route.query\r\n      const paths = path ? path.split('/') : []\r\n      const tmp = !path\r\n        ? []\r\n        : paths.map((item, index) => {\r\n            const path = paths.slice(0, index + 1).join('/')\r\n            return {\r\n              text: item,\r\n              to: `/media/file?path=${path}`,\r\n              exact: true,\r\n              disabled: false,\r\n            }\r\n          })\r\n      return root.concat(tmp)\r\n    },\r\n  },\r\n  watch: {\r\n    '$route.query': {\r\n      handler(query) {\r\n        this.fetchRecord(query)\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    fetchRecord(query) {\r\n      this.loading = true\r\n      this.items = []\r\n      this.$store\r\n        .dispatch('file/fetchDir', query)\r\n        .then(({ data }) => {\r\n          this.loading = false\r\n          this.items = data\r\n        })\r\n        .catch(() => {\r\n          this.loading = false\r\n        })\r\n    },\r\n    computePath(item) {\r\n      return item.type === 'dir'\r\n        ? {\r\n            path: '/media',\r\n            query: {\r\n              path: item.path,\r\n            },\r\n          }\r\n        : false\r\n    },\r\n    computeIcon(item) {\r\n      return item.type === 'dir' ? '#icon-wenjianjia' : this.getIconByExt(item.extension)\r\n    },\r\n    computeSize(size) {\r\n      return size ? humanReadableFileSize(size) : ''\r\n    },\r\n    handleRefresh() {\r\n      this.fetchRecord(this.$route.query)\r\n    },\r\n    handleSelectItem(item) {\r\n      if (item.type === 'dir') {\r\n        this.selectedItem = null\r\n        this.$router.push(this.computePath(item))\r\n      } else {\r\n        this.selectedItem = item\r\n        this.showRight = true\r\n        // view file\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"sass\" scoped>\r\n.center-align\r\n    position: absolute\r\n    left: 50%\r\n    top: 50%\r\n    transform: translateY(-50%) translateX(-50%)\r\n.icon\r\n  width: 42px\r\n  height: 42px\r\n  vertical-align: -0.15em\r\n  fill: currentColor\r\n  overflow: hidden\r\n.icon-64\r\n  width: 128px\r\n  height: 128px\r\n</style>\r\n"]}]}