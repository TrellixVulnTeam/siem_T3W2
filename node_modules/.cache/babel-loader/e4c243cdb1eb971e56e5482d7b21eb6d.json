{"remainingRequest":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\views\\task\\TaskList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\views\\task\\TaskList.vue","mtime":1640422935837},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\babel.config.js","mtime":1640353093300},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucGFyc2UtaW50LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS5ub3cuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5kYXRlLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVG9vbHRpcE1peGluIGZyb20gJ0AvbWl4aW5zL1Rvb2x0aXAnOwppbXBvcnQgVGFza0Zvcm0gZnJvbSAnQC9jb21wb25lbnRzL2Zvcm0vVGFza0Zvcm0nOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVGFza0Zvcm06IFRhc2tGb3JtCiAgfSwKICBtaXhpbnM6IFtUb29sdGlwTWl4aW5dLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzaG93RGlhbG9nOiBmYWxzZSwKICAgICAgc2VhcmNoOiAnJywKICAgICAgbG9hZGluZ0l0ZW1zOiBmYWxzZSwKICAgICAgc2VsZWN0ZWRJdGVtOiBudWxsLAogICAgICBzZXJ2ZXJJdGVtc0xlbmd0aDogMCwKICAgICAgaXRlbXNQZXJQYWdlOiAxNSwKICAgICAgc2hvd0ZpbHRlcjogdHJ1ZSwKICAgICAgZmlsdGVyOiB7CiAgICAgICAgcGFnZTogMSwKICAgICAgICAnZmlsdGVyW25hbWVdJzogbnVsbCwKICAgICAgICAnZmlsdGVyW3Byb2plY3RfaWRdJzogbnVsbCwKICAgICAgICAnZmlsdGVyW3N0YXR1c10nOiBudWxsCiAgICAgIH0sCiAgICAgIGhlYWRlcnM6IFt7CiAgICAgICAgdGV4dDogJ1Byb2plY3QnLAogICAgICAgIHZhbHVlOiAncHJvamVjdC5uYW1lJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1Rhc2snLAogICAgICAgIHZhbHVlOiAnbmFtZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdEZXNjcmlwdGlvbicsCiAgICAgICAgdmFsdWU6ICdkZXNjcmlwdGlvbicKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdzbHVnJywKICAgICAgICB2YWx1ZTogJ3NsdWcnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnU3RhdHVzJywKICAgICAgICB2YWx1ZTogJ3N0YXR1cycsCiAgICAgICAgd2lkdGg6IDEwMAogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0FjdGlvbicsCiAgICAgICAgdmFsdWU6ICdhY3Rpb24nCiAgICAgIH1dLAogICAgICBpdGVtczogW10sCiAgICAgIGFjdGlvbnM6IFt7CiAgICAgICAgdGV4dDogJ0VkaXQgSXRlbScsCiAgICAgICAgaWNvbjogJ21kaS1wZW5jaWwnLAogICAgICAgIGNsaWNrOiB0aGlzLmhhbmRsZUVkaXRJdGVtCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnRGVsZXRlIEl0ZW0nLAogICAgICAgIGljb246ICdtZGktY2xvc2UnLAogICAgICAgIGNsaWNrOiB0aGlzLmhhbmRsZURlbGV0ZUl0ZW0KICAgICAgfV0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0VGFza1N0YXR1czogZnVuY3Rpb24gZ2V0VGFza1N0YXR1cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3Rhc2svZ2V0VGFza1N0YXR1cyddOwogICAgfSwKICAgIGdldFByb2plY3RMaXN0OiBmdW5jdGlvbiBnZXRQcm9qZWN0TGlzdCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3Rhc2svZ2V0UHJvamVjdExpc3QnXTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAnJHJvdXRlLnF1ZXJ5JzogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHF1ZXJ5KSB7CiAgICAgICAgdmFyIGZpbHRlciA9IHRoaXMudXBkYXRlRmlsdGVyUXVlcnkocXVlcnkpOwogICAgICAgIHRoaXMuZmV0Y2hSZWNvcmRzKGZpbHRlcik7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLy8KICAgIHVwZGF0ZUZpbHRlclF1ZXJ5OiBmdW5jdGlvbiB1cGRhdGVGaWx0ZXJRdWVyeShxdWVyeSkgewogICAgICB2YXIgZmlsdGVyID0gT2JqZWN0LmFzc2lnbih0aGlzLmZpbHRlciwgdGhpcy50cmFuc2Zvcm1RdWVyeShxdWVyeSkpOwogICAgICByZXR1cm4gZmlsdGVyOwogICAgfSwKICAgIHRyYW5zZm9ybVF1ZXJ5OiBmdW5jdGlvbiB0cmFuc2Zvcm1RdWVyeShxdWVyeSkgewogICAgICB2YXIgbnVtYmVycyA9IFsnZmlsdGVyW3Byb2plY3RfaWRdJywgJ2ZpbHRlcltzdGF0dXNdJywgJ3BhZ2UnXTsKCiAgICAgIGZvciAodmFyIGtleSBpbiBxdWVyeSkgewogICAgICAgIGlmIChudW1iZXJzLmluY2x1ZGVzKGtleSkpIHsKICAgICAgICAgIHZhciB2YWwgPSBxdWVyeVtrZXldID8gcGFyc2VJbnQocXVlcnlba2V5XSkgOiBxdWVyeVtrZXldOwogICAgICAgICAgcXVlcnlba2V5XSA9IHZhbDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBxdWVyeTsKICAgIH0sCiAgICByZXNldEZpbHRlcjogZnVuY3Rpb24gcmVzZXRGaWx0ZXIoKSB7CiAgICAgIHRoaXMuZmlsdGVyID0gewogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgJ2ZpbHRlcltuYW1lXSc6IG51bGwsCiAgICAgICAgJ2ZpbHRlcltwcm9qZWN0X2lkXSc6IG51bGwsCiAgICAgICAgJ2ZpbHRlcltzdGF0dXNdJzogbnVsbAogICAgICB9OwogICAgfSwKICAgIGZldGNoUmVjb3JkczogZnVuY3Rpb24gZmV0Y2hSZWNvcmRzKHF1ZXJ5KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxvYWRpbmdJdGVtcyA9IHRydWU7CiAgICAgIHRoaXMuaXRlbXMgPSBbXTsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd0YXNrL2ZldGNoVGFzaycsIHF1ZXJ5KS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIGRhdGEgPSBfcmVmLmRhdGEsCiAgICAgICAgICAgIG1ldGEgPSBfcmVmLm1ldGE7CiAgICAgICAgX3RoaXMuaXRlbXMgPSBkYXRhOwogICAgICAgIF90aGlzLnNlcnZlckl0ZW1zTGVuZ3RoID0gbWV0YS50b3RhbDsKICAgICAgICBfdGhpcy5sb2FkaW5nSXRlbXMgPSBmYWxzZTsKICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmxvYWRpbmdJdGVtcyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvL2FjdGlvbgogICAgaGFuZGxlQ3JlYXRlSXRlbTogZnVuY3Rpb24gaGFuZGxlQ3JlYXRlSXRlbSgpIHsKICAgICAgdGhpcy5zZWxlY3RlZEl0ZW0gPSBudWxsOwogICAgICB0aGlzLnNob3dEaWFsb2cgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZUVkaXRJdGVtOiBmdW5jdGlvbiBoYW5kbGVFZGl0SXRlbShpdGVtKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRJdGVtID0gaXRlbTsKICAgICAgdGhpcy5zaG93RGlhbG9nID0gdHJ1ZTsKICAgIH0sCiAgICBoYW5kbGVEZWxldGVJdGVtOiBmdW5jdGlvbiBoYW5kbGVEZWxldGVJdGVtKF9yZWYyKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGlkID0gX3JlZjIuaWQ7CgogICAgICBpZiAod2luZG93LmNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB0byBkZWxldGUgdGhpcycpKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3Rhc2svZGVsZXRlVGFzaycsIGlkKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMi5pdGVtcyA9IF90aGlzMi5pdGVtcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIGl0ZW0uaWQgIT0gaWQ7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVVwZGF0ZVN0YXR1czogZnVuY3Rpb24gaGFuZGxlVXBkYXRlU3RhdHVzKGl0ZW0sIHN0YXR1cykgewogICAgICB2YXIgcGF5bG9hZCA9IHsKICAgICAgICBpZDogaXRlbS5pZCwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBzdGF0dXM6IHN0YXR1cwogICAgICAgIH0KICAgICAgfTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3Rhc2svdXBkYXRlVGFzaycsIHBheWxvYWQpOwogICAgfSwKICAgIGhhbmRsZVJlZnJlc2hJdGVtOiBmdW5jdGlvbiBoYW5kbGVSZWZyZXNoSXRlbSgpIHsKICAgICAgdGhpcy5mZXRjaFJlY29yZHModGhpcy5maWx0ZXIpOwogICAgfSwKICAgIC8vIGZpbHRlcgogICAgaGFuZGxlUGFnZUNoYW5nZWQ6IGZ1bmN0aW9uIGhhbmRsZVBhZ2VDaGFuZ2VkKHBhZ2UpIHsKICAgICAgdGhpcy5maWx0ZXIucGFnZSA9IHBhZ2U7CiAgICAgIHRoaXMuZmlsdGVyLnQgPSBEYXRlLm5vdygpOwogICAgICB0aGlzLiRyb3V0ZXIucmVwbGFjZSh7CiAgICAgICAgcGF0aDogdGhpcy4kcm91dGUucGF0aCwKICAgICAgICBxdWVyeTogdGhpcy5maWx0ZXIKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlUmVzZXRGaWx0ZXI6IGZ1bmN0aW9uIGhhbmRsZVJlc2V0RmlsdGVyKCkgewogICAgICB0aGlzLmZpbHRlciA9IHsKICAgICAgICBwYWdlOiAxLAogICAgICAgICdmaWx0ZXJbbmFtZV0nOiBudWxsLAogICAgICAgICdmaWx0ZXJbc3RhdHVzXSc6IG51bGwKICAgICAgfTsKICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoewogICAgICAgIHBhdGg6IHRoaXMuJHJvdXRlLnBhdGgKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQXBwbHlGaWx0ZXI6IGZ1bmN0aW9uIGhhbmRsZUFwcGx5RmlsdGVyKCkgewogICAgICB0aGlzLmZpbHRlci50ID0gRGF0ZS5ub3coKTsKICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoewogICAgICAgIHBhdGg6IHRoaXMuJHJvdXRlLnBhdGgsCiAgICAgICAgcXVlcnk6IHRoaXMuZmlsdGVyCiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUNsZWFyOiBmdW5jdGlvbiBoYW5kbGVDbGVhcigpIHsKICAgICAgdGhpcy5yZXNldEZpbHRlcigpOwogICAgICB0aGlzLmZpbHRlci50ID0gRGF0ZS5ub3coKTsKICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoewogICAgICAgIHBhdGg6IHRoaXMuJHJvdXRlLnBhdGgsCiAgICAgICAgcXVlcnk6IHRoaXMuZmlsdGVyCiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUZvcm1TdWNjZXNzOiBmdW5jdGlvbiBoYW5kbGVGb3JtU3VjY2VzcygpIHsKICAgICAgdGhpcy5zaG93RGlhbG9nID0gZmFsc2U7CiAgICAgIHRoaXMuZmV0Y2hSZWNvcmRzKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TaskList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-subheader class=\"pl-0\">A simple demo for showing how to build datatable with REST API </v-subheader>\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <v-card tile>\r\n          <v-toolbar flat>\r\n            <v-text-field\r\n              v-model=\"filter['filter[name]']\"\r\n              text\r\n              solo\r\n              flat\r\n              :prepend-icon=\"showFilter ? 'mdi-filter-variant-plus' : 'mdi-filter-variant'\"\r\n              append-icon=\"mdi-magnify\"\r\n              placeholder=\"Type something\"\r\n              hide-details\r\n              clearable\r\n              @keyup.enter=\"handleApplyFilter\"\r\n              @click:append=\"handleApplyFilter\"\r\n              @click:prepend=\"showFilter = !showFilter\"\r\n              @click:clear=\"handleClear\"\r\n            />\r\n            <v-btn icon @click=\"handleRefreshItem\">\r\n              <v-icon>mdi-refresh</v-icon>\r\n            </v-btn>\r\n            <v-btn icon @click=\"handleCreateItem\">\r\n              <v-icon>mdi-plus</v-icon>\r\n            </v-btn>\r\n          </v-toolbar>\r\n          <v-divider />\r\n          <v-card v-show=\"showFilter\" flat class=\"grey lighten-4\">\r\n            <v-card-text>\r\n              <v-row>\r\n                <v-col :cols=\"4\">\r\n                  <v-autocomplete v-model=\"filter['filter[project_id]']\" :items=\"getProjectList\" label=\"Project\" />\r\n                </v-col>\r\n                <v-col :cols=\"4\">\r\n                  <v-autocomplete v-model=\"filter['filter[status]']\" :items=\"getTaskStatus\" label=\"Status\" />\r\n                </v-col>\r\n              </v-row>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-btn text @click=\"handleResetFilter\">Reset</v-btn>\r\n              <v-btn tile color=\"primary\" @click=\"handleApplyFilter\">Apply</v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n          <v-card-text class=\"pa-0\">\r\n            <v-data-table\r\n              :loading=\"loadingItems\"\r\n              :headers=\"headers\"\r\n              :items=\"items\"\r\n              :items-per-page-options=\"[15, 30, 50]\"\r\n              :server-items-length=\"serverItemsLength\"\r\n              :items-per-page=\"itemsPerPage\"\r\n              :page.sync=\"filter['page']\"\r\n              item-key=\"id\"\r\n              show-select\r\n              @update:page=\"handlePageChanged\"\r\n            >\r\n              <template #[`item.status`]=\"{ item }\">\r\n                <v-autocomplete\r\n                  v-model=\"item.status\"\r\n                  :items=\"getTaskStatus\"\r\n                  @change=\"handleUpdateStatus(item, item.status)\"\r\n                />\r\n              </template>\r\n              <template #[`item.action`]=\"{ item }\">\r\n                <v-menu>\r\n                  <template #activator=\"{ on: menu }\">\r\n                    <v-tooltip bottom>\r\n                      <template #activator=\"{ on: tooltip }\">\r\n                        <v-btn icon v-on=\"onTooltip({ ...tooltip, ...menu })\">\r\n                          <v-icon>mdi-dots-vertical</v-icon>\r\n                        </v-btn>\r\n                      </template>\r\n                      <span>Action</span>\r\n                    </v-tooltip>\r\n                  </template>\r\n                  <v-list class=\"pa-0\" dense>\r\n                    <v-list-item v-for=\"action in actions\" :key=\"action.text\" @click=\"action.click(item)\">\r\n                      <v-list-item-icon class=\"mr-2\">\r\n                        <v-icon small>{{ action.icon }}</v-icon>\r\n                      </v-list-item-icon>\r\n                      <v-list-item-title>{{ action.text }}</v-list-item-title>\r\n                    </v-list-item>\r\n                  </v-list>\r\n                </v-menu>\r\n              </template>\r\n            </v-data-table>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n    <v-dialog v-model=\"showDialog\" scrollable width=\"840\">\r\n      <task-form :item=\"selectedItem\" @form:success=\"handleFormSuccess\" />\r\n    </v-dialog>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport TooltipMixin from '@/mixins/Tooltip'\r\nimport TaskForm from '@/components/form/TaskForm'\r\nexport default {\r\n  components: {\r\n    TaskForm,\r\n  },\r\n  mixins: [TooltipMixin],\r\n  data() {\r\n    return {\r\n      showDialog: false,\r\n      search: '',\r\n      loadingItems: false,\r\n      selectedItem: null,\r\n      serverItemsLength: 0,\r\n      itemsPerPage: 15,\r\n      showFilter: true,\r\n      filter: {\r\n        page: 1,\r\n        'filter[name]': null,\r\n        'filter[project_id]': null,\r\n        'filter[status]': null,\r\n      },\r\n      headers: [\r\n        {\r\n          text: 'Project',\r\n          value: 'project.name',\r\n        },\r\n        {\r\n          text: 'Task',\r\n          value: 'name',\r\n        },\r\n        {\r\n          text: 'Description',\r\n          value: 'description',\r\n        },\r\n        {\r\n          text: 'slug',\r\n          value: 'slug',\r\n        },\r\n        {\r\n          text: 'Status',\r\n          value: 'status',\r\n          width: 100,\r\n        },\r\n        {\r\n          text: 'Action',\r\n          value: 'action',\r\n        },\r\n      ],\r\n      items: [],\r\n      actions: [\r\n        {\r\n          text: 'Edit Item',\r\n          icon: 'mdi-pencil',\r\n          click: this.handleEditItem,\r\n        },\r\n        {\r\n          text: 'Delete Item',\r\n          icon: 'mdi-close',\r\n          click: this.handleDeleteItem,\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  computed: {\r\n    getTaskStatus () {\r\n      return this.$store.getters['task/getTaskStatus']\r\n    },\r\n    getProjectList () {\r\n      return this.$store.getters['task/getProjectList']\r\n    }\r\n  },\r\n  watch: {\r\n    '$route.query': {\r\n      handler(query) {\r\n        const filter = this.updateFilterQuery(query)\r\n        this.fetchRecords(filter)\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    //\r\n    updateFilterQuery(query) {\r\n      const filter = Object.assign(this.filter, this.transformQuery(query))\r\n      return filter\r\n    },\r\n    transformQuery(query) {\r\n      const numbers = ['filter[project_id]', 'filter[status]', 'page']\r\n      for (let key in query) {\r\n        if (numbers.includes(key)) {\r\n          const val = query[key] ? parseInt(query[key]) : query[key]\r\n          query[key] = val\r\n        }\r\n      }\r\n      return query\r\n    },\r\n    resetFilter() {\r\n      this.filter = {\r\n        page: 1,\r\n        'filter[name]': null,\r\n        'filter[project_id]': null,\r\n        'filter[status]': null,\r\n      }\r\n    },\r\n    fetchRecords(query) {\r\n      this.loadingItems = true\r\n      this.items = []\r\n      return this.$store\r\n        .dispatch('task/fetchTask', query)\r\n        .then(({ data, meta }) => {\r\n          this.items = data\r\n          this.serverItemsLength = meta.total\r\n          this.loadingItems = false\r\n        })\r\n        .catch(() => {\r\n          this.loadingItems = false\r\n        })\r\n    },\r\n    //action\r\n    handleCreateItem() {\r\n      this.selectedItem = null\r\n      this.showDialog = true\r\n    },\r\n    handleEditItem(item) {\r\n      this.selectedItem = item\r\n      this.showDialog = true\r\n    },\r\n    handleDeleteItem({ id }) {\r\n      if (window.confirm('Are you sure to delete this')) {\r\n        this.$store.dispatch('task/deleteTask', id).then(() => {\r\n          this.items = this.items.filter((item) => item.id != id)\r\n        })\r\n      }\r\n    },\r\n    handleUpdateStatus(item, status) {\r\n      const payload = {\r\n        id: item.id,\r\n        data: {\r\n          status: status,\r\n        },\r\n      }\r\n      this.$store.dispatch('task/updateTask', payload)\r\n    },\r\n    handleRefreshItem() {\r\n      this.fetchRecords(this.filter)\r\n    },\r\n    // filter\r\n    handlePageChanged(page) {\r\n      this.filter.page = page\r\n      this.filter.t = Date.now()\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n        query: this.filter,\r\n      })\r\n    },\r\n    handleResetFilter() {\r\n      this.filter = {\r\n        page: 1,\r\n        'filter[name]': null,\r\n        'filter[status]': null,\r\n      }\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n      })\r\n    },\r\n    handleApplyFilter() {\r\n      this.filter.t = Date.now()\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n        query: this.filter,\r\n      })\r\n    },\r\n    handleClear() {\r\n      this.resetFilter()\r\n      this.filter.t = Date.now()\r\n      this.$router.replace({\r\n        path: this.$route.path,\r\n        query: this.filter,\r\n      })\r\n    },\r\n    handleFormSuccess() {\r\n      this.showDialog = false\r\n      this.fetchRecords()\r\n    },\r\n  },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/task"}]}