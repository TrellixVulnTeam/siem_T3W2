{"remainingRequest":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\store\\modules\\user.js","mtime":1640353310874},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\babel.config.js","mtime":1640353093300},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlsL3JlcXVlc3QnOwp2YXIgc3RhdGUgPSB7fTsgLy8gZ2V0dGVycwoKdmFyIGdldHRlcnMgPSB7fTsgLy8gYWN0aW9ucwoKdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hVc2VyOiBmdW5jdGlvbiBmZXRjaFVzZXIoY29udGV4dCwgcXVlcnkpIHsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAiL2FjbC91c2VyLyIsCiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHBhcmFtczogcXVlcnkKICAgIH0pOwogIH0sCiAgY3JlYXRlVXNlcjogZnVuY3Rpb24gY3JlYXRlVXNlcihjb250ZXh0LCBkYXRhKSB7CiAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgIHVybDogIi9hY2wvdXNlci8iLAogICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgZGF0YTogZGF0YQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcCkgewogICAgICByZXR1cm4gcmVzcDsKICAgIH0pOwogIH0sCiAgdXBkYXRlVXNlcjogZnVuY3Rpb24gdXBkYXRlVXNlcihjb250ZXh0LCBfcmVmKSB7CiAgICB2YXIgaWQgPSBfcmVmLmlkLAogICAgICAgIGRhdGEgPSBfcmVmLmRhdGE7CiAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgIHVybDogIi9hY2wvdXNlci8iLmNvbmNhdChpZCksCiAgICAgIG1ldGhvZDogJ3B1dCcsCiAgICAgIGRhdGE6IGRhdGEKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgcmV0dXJuIHJlc3A7CiAgICB9KTsKICB9LAogIGdldFVzZXJCeUlkOiBmdW5jdGlvbiBnZXRVc2VyQnlJZChjb250ZXh0LCBpZCkgewogICAgcmV0dXJuIHJlcXVlc3QoewogICAgICB1cmw6ICIvYWNsL3VzZXIvIi5jb25jYXQoaWQpLAogICAgICBtZXRob2Q6ICdnZXQnCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgIHJldHVybiByZXNwOwogICAgfSk7CiAgfQp9OyAvLyBtdXRhdGlvbnMKCnZhciBtdXRhdGlvbnMgPSB7fTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["D:/project/prj_scms/branch_ducdm/tkmsiem/src/store/modules/user.js"],"names":["request","state","getters","actions","fetchUser","context","query","url","method","params","createUser","data","then","resp","updateUser","id","getUserById","mutations","namespaced"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,IAAMC,KAAK,GAAG,EAAd,C,CAEA;;AACA,IAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,SADc,qBACJC,OADI,EACKC,KADL,EACY;AACxB,WAAON,OAAO,CAAC;AACbO,MAAAA,GAAG,cADU;AAEbC,MAAAA,MAAM,EAAE,KAFK;AAGbC,MAAAA,MAAM,EAAEH;AAHK,KAAD,CAAd;AAKD,GAPa;AAQdI,EAAAA,UARc,sBAQHL,OARG,EAQMM,IARN,EAQY;AACxB,WAAOX,OAAO,CAAC;AACbO,MAAAA,GAAG,cADU;AAEbC,MAAAA,MAAM,EAAE,MAFK;AAGbG,MAAAA,IAAI,EAAEA;AAHO,KAAD,CAAP,CAIJC,IAJI,CAIC,UAACC,IAAD,EAAU;AAChB,aAAOA,IAAP;AACD,KANM,CAAP;AAOD,GAhBa;AAiBdC,EAAAA,UAjBc,sBAiBHT,OAjBG,QAiBoB;AAAA,QAAZU,EAAY,QAAZA,EAAY;AAAA,QAARJ,IAAQ,QAARA,IAAQ;AAChC,WAAOX,OAAO,CAAC;AACbO,MAAAA,GAAG,sBAAeQ,EAAf,CADU;AAEbP,MAAAA,MAAM,EAAE,KAFK;AAGbG,MAAAA,IAAI,EAAEA;AAHO,KAAD,CAAP,CAIJC,IAJI,CAIC,UAACC,IAAD,EAAU;AAChB,aAAOA,IAAP;AACD,KANM,CAAP;AAOD,GAzBa;AA0BdG,EAAAA,WA1Bc,uBA0BFX,OA1BE,EA0BOU,EA1BP,EA0BW;AACvB,WAAOf,OAAO,CAAC;AACbO,MAAAA,GAAG,sBAAeQ,EAAf,CADU;AAEbP,MAAAA,MAAM,EAAE;AAFK,KAAD,CAAP,CAGJI,IAHI,CAGC,UAACC,IAAD,EAAU;AAChB,aAAOA,IAAP;AACD,KALM,CAAP;AAMD;AAjCa,CAAhB,C,CAoCA;;AACA,IAAMI,SAAS,GAAG,EAAlB;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbjB,EAAAA,KAAK,EAALA,KAFa;AAGbC,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA,OAJa;AAKbc,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["import request from '@/util/request'\r\n\r\nconst state = {}\r\n\r\n// getters\r\nconst getters = {}\r\n\r\n// actions\r\nconst actions = {\r\n  fetchUser(context, query) {\r\n    return request({\r\n      url: `/acl/user/`,\r\n      method: 'get',\r\n      params: query,\r\n    })\r\n  },\r\n  createUser(context, data) {\r\n    return request({\r\n      url: `/acl/user/`,\r\n      method: 'post',\r\n      data: data,\r\n    }).then((resp) => {\r\n      return resp\r\n    })\r\n  },\r\n  updateUser(context, { id, data }) {\r\n    return request({\r\n      url: `/acl/user/${id}`,\r\n      method: 'put',\r\n      data: data,\r\n    }).then((resp) => {\r\n      return resp\r\n    })\r\n  },\r\n  getUserById(context, id) {\r\n    return request({\r\n      url: `/acl/user/${id}`,\r\n      method: 'get',\r\n    }).then((resp) => {\r\n      return resp\r\n    })\r\n  },\r\n}\r\n\r\n// mutations\r\nconst mutations = {}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations,\r\n}\r\n"]}]}