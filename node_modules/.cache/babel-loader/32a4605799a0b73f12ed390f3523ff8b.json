{"remainingRequest":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\store\\modules\\task.js","dependencies":[{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\src\\store\\modules\\task.js","mtime":1640353310873},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\babel.config.js","mtime":1640353093300},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\project\\prj_scms\\branch_ducdm\\tkmsiem\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlsL3JlcXVlc3QnOwp2YXIgc3RhdGUgPSB7CiAgcHJvamVjdHM6IFtdLAogIHRhc2tTdGF0dXM6IFt7CiAgICB0ZXh0OiAnVG9kbycsCiAgICB2YWx1ZTogMAogIH0sIHsKICAgIHRleHQ6ICdQcm9ncmVzcycsCiAgICB2YWx1ZTogMQogIH0sIHsKICAgIHRleHQ6ICdEb25lJywKICAgIHZhbHVlOiAyCiAgfV0KfTsgLy8gZ2V0dGVycwoKdmFyIGdldHRlcnMgPSB7CiAgZ2V0UHJvamVjdExpc3Q6IGZ1bmN0aW9uIGdldFByb2plY3RMaXN0KHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucHJvamVjdHMubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdGV4dDogaXRlbS5uYW1lLAogICAgICAgIHZhbHVlOiBpdGVtLmlkCiAgICAgIH07CiAgICB9KTsKICB9LAogIGdldFRhc2tTdGF0dXM6IGZ1bmN0aW9uIGdldFRhc2tTdGF0dXMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS50YXNrU3RhdHVzOwogIH0sCiAgZ2V0VGFza1N0YXR1c0J5VmFsdWU6IGZ1bmN0aW9uIGdldFRhc2tTdGF0dXNCeVZhbHVlKHN0YXRlKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHZhciBmaW5kID0gc3RhdGUudGFza1N0YXR1cy5maW5kKGl0ZW0udmFsdWUgPT09IHZhbHVlKTsKICAgICAgcmV0dXJuIGZpbmQudGV4dDsKICAgIH07CiAgfQp9OyAvLyBhY3Rpb25zCgp2YXIgYWN0aW9ucyA9IHsKICBmZXRjaFByb2plY3Q6IGZ1bmN0aW9uIGZldGNoUHJvamVjdChjb250ZXh0LCBxdWVyeSkgewogICAgcmV0dXJuIHJlcXVlc3QoewogICAgICB1cmw6ICJwbXMvcHJvamVjdCIsCiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHBhcmFtczogcXVlcnkKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgY29udGV4dC5jb21taXQoJ3Rhc2svU0VUX1BST0pFQ1QnLCByZXNwLmRhdGEsIHsKICAgICAgICByb290OiB0cnVlCiAgICAgIH0pOwogICAgICByZXR1cm4gcmVzcDsKICAgIH0pOwogIH0sCiAgZmV0Y2hUYXNrOiBmdW5jdGlvbiBmZXRjaFRhc2soY29udGV4dCwgcXVlcnkpIHsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAicG1zL3Rhc2siLAogICAgICBtZXRob2Q6ICdnZXQnLAogICAgICBwYXJhbXM6IHF1ZXJ5CiAgICB9KTsKICB9LAogIGNyZWF0ZVRhc2s6IGZ1bmN0aW9uIGNyZWF0ZVRhc2soY29udGV4dCwgZGF0YSkgewogICAgcmV0dXJuIHJlcXVlc3QoewogICAgICB1cmw6ICJwbXMvdGFzayIsCiAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICBkYXRhOiBkYXRhCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgIHJldHVybiByZXNwOwogICAgfSk7CiAgfSwKICB1cGRhdGVUYXNrOiBmdW5jdGlvbiB1cGRhdGVUYXNrKGNvbnRleHQsIF9yZWYpIHsKICAgIHZhciBpZCA9IF9yZWYuaWQsCiAgICAgICAgZGF0YSA9IF9yZWYuZGF0YTsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAicG1zL3Rhc2svIi5jb25jYXQoaWQpLAogICAgICBtZXRob2Q6ICdwdXQnLAogICAgICBkYXRhOiBkYXRhCiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgIHJldHVybiByZXNwOwogICAgfSk7CiAgfSwKICB1cGRhdGVUYXNrU3RhdHVzOiBmdW5jdGlvbiB1cGRhdGVUYXNrU3RhdHVzKGNvbnRleHQsIF9yZWYyKSB7CiAgICB2YXIgaWQgPSBfcmVmMi5pZCwKICAgICAgICBzdGF0dXMgPSBfcmVmMi5zdGF0dXM7CiAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgIHVybDogInBtcy90YXNrLyIuY29uY2F0KGlkKSwKICAgICAgbWV0aG9kOiAncHV0JywKICAgICAgZGF0YTogewogICAgICAgIHN0YXR1czogc3RhdHVzCiAgICAgIH0KICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgcmV0dXJuIHJlc3A7CiAgICB9KTsKICB9LAogIGRlbGV0ZVRhc2s6IGZ1bmN0aW9uIGRlbGV0ZVRhc2soY29udGV4dCwgaWQpIHsKICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgdXJsOiAicG1zL3Rhc2svIi5jb25jYXQoaWQpLAogICAgICBtZXRob2Q6ICdkZWxldGUnCiAgICB9KTsKICB9LAogIGdldFRhc2tCeUlkOiBmdW5jdGlvbiBnZXRUYXNrQnlJZChjb250ZXh0LCBpZCkgewogICAgcmV0dXJuIHJlcXVlc3QoewogICAgICB1cmw6ICJwbXMvdGFzay8iLmNvbmNhdChpZCksCiAgICAgIG1ldGhvZDogJ2dldCcKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgcmV0dXJuIHJlc3A7CiAgICB9KTsKICB9Cn07IC8vIG11dGF0aW9ucwoKdmFyIG11dGF0aW9ucyA9IHsKICBTRVRfUFJPSkVDVDogZnVuY3Rpb24gU0VUX1BST0pFQ1Qoc3RhdGUsIGRhdGEpIHsKICAgIHN0YXRlLnByb2plY3RzID0gZGF0YTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["D:/project/prj_scms/branch_ducdm/tkmsiem/src/store/modules/task.js"],"names":["request","state","projects","taskStatus","text","value","getters","getProjectList","map","item","name","id","getTaskStatus","getTaskStatusByValue","find","actions","fetchProject","context","query","url","method","params","then","resp","commit","data","root","fetchTask","createTask","updateTask","updateTaskStatus","status","deleteTask","getTaskById","mutations","SET_PROJECT","namespaced"],"mappings":"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","sourcesContent":["import request from '@/util/request'\r\n\r\nconst state = {\r\n  projects: [],\r\n  taskStatus: [\r\n    {\r\n      text: 'Todo',\r\n      value: 0,\r\n    },\r\n    {\r\n      text: 'Progress',\r\n      value: 1,\r\n    },\r\n    {\r\n      text: 'Done',\r\n      value: 2,\r\n    },\r\n  ],\r\n}\r\n\r\n// getters\r\nconst getters = {\r\n  getProjectList: (state) => {\r\n    return state.projects.map((item) => {\r\n      return {\r\n        text: item.name,\r\n        value: item.id,\r\n      }\r\n    })\r\n  },\r\n  getTaskStatus: (state) => state.taskStatus,\r\n  getTaskStatusByValue: (state) => (value) => {\r\n    const find = state.taskStatus.find(item.value === value)\r\n    return find.text\r\n  },\r\n}\r\n\r\n// actions\r\nconst actions = {\r\n  fetchProject(context, query) {\r\n    return request({\r\n      url: `pms/project`,\r\n      method: 'get',\r\n      params: query,\r\n    }).then((resp) => {\r\n      context.commit('task/SET_PROJECT', resp.data, { root: true })\r\n      return resp\r\n    })\r\n  },\r\n  fetchTask(context, query) {\r\n    return request({\r\n      url: `pms/task`,\r\n      method: 'get',\r\n      params: query,\r\n    })\r\n  },\r\n  createTask(context, data) {\r\n    return request({\r\n      url: `pms/task`,\r\n      method: 'post',\r\n      data: data,\r\n    }).then((resp) => {\r\n      return resp\r\n    })\r\n  },\r\n  updateTask(context, { id, data }) {\r\n    return request({\r\n      url: `pms/task/${id}`,\r\n      method: 'put',\r\n      data: data,\r\n    }).then((resp) => {\r\n      return resp\r\n    })\r\n  },\r\n  updateTaskStatus(context, { id, status }) {\r\n    return request({\r\n      url: `pms/task/${id}`,\r\n      method: 'put',\r\n      data: {\r\n        status: status,\r\n      },\r\n    }).then((resp) => {\r\n      return resp\r\n    })\r\n  },\r\n  deleteTask(context, id) {\r\n    return request({\r\n      url: `pms/task/${id}`,\r\n      method: 'delete',\r\n    })\r\n  },\r\n  getTaskById(context, id) {\r\n    return request({\r\n      url: `pms/task/${id}`,\r\n      method: 'get',\r\n    }).then((resp) => {\r\n      return resp\r\n    })\r\n  },\r\n}\r\n\r\n// mutations\r\nconst mutations = {\r\n  SET_PROJECT(state, data) {\r\n    state.projects = data\r\n  },\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations,\r\n}\r\n"]}]}